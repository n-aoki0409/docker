version: "3"

services:
  zookeeper1:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper1
    container_name: kafka-zookeeper1
    ports:
      - 22181:22181
    environment:
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zookeeper1:22888:23888;zookeeper2:22888:23888;zookeeper3:22888:23888

  zookeeper2:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper2
    container_name: kafka-zookeeper2
    ports:
      - 32181:22181
    environment:
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 2
      ZOOKEEPER_SERVERS: zookeeper1:22888:23888;zookeeper2:22888:23888;zookeeper3:22888:23888

  zookeeper3:
    image: confluentinc/cp-zookeeper:7.0.1
    hostname: zookeeper3
    container_name: kafka-zookeeper3
    ports:
      - 42181:22181
    environment:
      ZOOKEEPER_CLIENT_PORT: 22181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 3
      ZOOKEEPER_SERVERS: zookeeper1:22888:23888;zookeeper2:22888:23888;zookeeper3:22888:23888

  broker1:
    build:
      context: ./broker
    hostname: broker1
    container_name: kafka-broker1
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:22181,zookeeper2:22181,zookeeper3:22181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:29092
      CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_OPTS: -javaagent:/usr/share/java/kafka/jolokia-jvm-1.7.1.jar=port=8778,host=0.0.0.0

  broker2:
    build:
      context: ./broker
    hostname: broker2
    container_name: kafka-broker2
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    ports:
      - 39092:29092
    environment:
      KAFKA_BROKER_ID: 2
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:22181,zookeeper2:22181,zookeeper3:22181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2:29092
      CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_OPTS: -javaagent:/usr/share/java/kafka/jolokia-jvm-1.7.1.jar=port=8778,host=0.0.0.0

  broker3:
    build:
      context: ./broker
    hostname: broker3
    container_name: kafka-broker3
    depends_on:
      - zookeeper1
      - zookeeper2
      - zookeeper3
    ports:
      - 49092:29092
    environment:
      KAFKA_BROKER_ID: 3
      KAFKA_ZOOKEEPER_CONNECT: zookeeper1:22181,zookeeper2:22181,zookeeper3:22181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker3:29092
      CONFLUENT_SUPPORT_METRICS_ENABLE: "false"
      KAFKA_OPTS: -javaagent:/usr/share/java/kafka/jolokia-jvm-1.7.1.jar=port=8778,host=0.0.0.0

  client:
    image: confluentinc/cp-kafka:7.0.1
    hostname: client
    container_name: kafka-client
    volumes:
      - ./kafka-sandbox-assembly-1.0.jar:/home/appuser/kafka-sandbox-assembly-1.0.jar
    depends_on:
      - broker1
      - broker2
      - broker3
    entrypoint: /bin/sh
    tty: true

  proxy:
    image: confluentinc/cp-kafka-rest:7.0.1
    hostname: proxy
    container_name: kafka-proxy
    depends_on:
      - broker1
      - broker2
      - broker3
    ports:
      - 8082:8082
    environment:
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082
      KAFKA_REST_BOOTSTRAP_SERVERS: broker1:29092,broker2:29092,broker3:29092

  connect:
    build:
      context: ./connect
    hostname: connect
    container_name: kafka-connect
    volumes:
      - ./zaiko/latest.txt:/home/appuser/zaiko-latest.txt
    depends_on:
      - broker1
      - broker2
      - broker3
      - mysql
      - schema-registry
    environment:
      CONNECT_BOOTSTRAP_SERVERS: broker1:29092,broker2:29092,broker3:29092
      CONNECT_REST_PORT: 28082
      CONNECT_GROUP_ID: quickstart
      CONNECT_CONFIG_STORAGE_TOPIC: quickstart-config
      CONNECT_OFFSET_STORAGE_TOPIC: quickstart-offsets
      CONNECT_STATUS_STORAGE_TOPIC: quickstart-status

      # JsonConverterの場合
      # CONNECT_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      # CONNECT_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      # CONNECT_INTERNAL_KEY_CONVERTER: org.apache.kafka.connect.json.JsonConverter
      # CONNECT_INTERNAL_VALUE_CONVERTER: org.apache.kafka.connect.json.JsonConverter

      # AvroConverterの場合
      CONNECT_KEY_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_KEY_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://schema-registry:8081

      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_PLUGIN_PATH: /usr/share/java,/usr/share/filestream-connectors,/usr/share/confluent-hub-components,/etc/kafka-connect/jars

  schema-registry:
    image: confluentinc/cp-schema-registry:7.0.1
    hostname: schema-registry
    container_name: kafka-schema-registry
    depends_on:
      - broker1
      - broker2
      - broker3
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: PLAINTEXT://broker1:29092,PLAINTEXT://broker2:29092,PLAINTEXT://broker3:29092
      SCHEMA_REGISTRY_HOST_NAME: localhost
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
      SCHEMA_REGISTRY_DEBUG: true

  mqtt:
    image: confluentinc/cp-kafka-mqtt:7.0.1
    hostname: mqtt
    container_name: kafka-mqtt
    depends_on:
      - broker1
      - broker2
      - broker3
    environment:
      KAFKA_MQTT_BOOTSTRAP_SERVERS: PLAINTEXT://broker1:29092
      KAFKA_MQTT_TOPIC_REGEX_LIST: mqtt-source:.*

  mosquitto:
    image: eclipse-mosquitto
    container_name: kafka-mosquitto

  mysql:
    image: mysql:8.0
    hostname: mysql
    container_name: kafka-mysql
    volumes:
      - ./mysql/initdb.d:/docker-entrypoint-initdb.d
    privileged: true
    ports:
      - 3306:3306
    environment:
      MYSQL_ROOT_PASSWORD: root

  fluentd:
    build:
      context: ./fluentd
    hostname: fluentd
    container_name: kafka-fluentd
    ports:
      - 9880:9880
      - 24224:24224
    volumes:
      - ./fluentd/fluent.conf:/fluentd/etc/fluent.conf
    depends_on:
      - broker1
      - broker2
      - broker3

  fink:
    build:
      context: ./flink
    hostname: flink
    container_name: kafka-flink
    volumes:
      - ./flink-sandbox-assembly-1.0.jar:/flink/examples/streaming/flink-sandbox-assembly-1.0.jar
    tty: true

networks:
  kafka: